#include <stdbool.h>
#include <stdlib.h>
#include <string.h>

#include "array_merge.h"


//find duplicate numbers in array
int* removeDup(int A[],int size){
  int counter[]=calloc(10,sizeof(int));
  int index=0;
  int size=0;
  while(index<size){
    counter[A[index]]+=1;
  }
  index=0;
  while(index<10){
    if(counter[index]>0){
      size++;
    }
  }
  int* 
  
  return 0
}


int* mergeAll(int num_arrays, int* sizes, int** values){
  int count=num_arrays;
  int totalSize;
  //gets total size of new array
  while(count>0){
    totalSize+=sizes[--count];
  }
  int newArr[]=calloc(totalSize,sizeof(int));
  int newArrIndex=0;
  while(num_arrays>0){
    //index for traversing through current array
    int index=0;
    //reduce num_arrays by one since arrays start at 0
    int currentArr=--num_arrays;
    //size of current array
    int size=sizes[currentArr];
    while(index<size){
      newArr[newArrIndex++]=values[currentArr][--size];
    }
  }
  return newArr;

}

//num_arrays is the number of arrays in values

//sizes is an array of ints that should also have num_arrays entries
//, each of which is the length of the corresponding sub-array in values
int* array_merge(int num_arrays, int* sizes, int** values){
  int tempArr[]=mergeAll(num_arrays, sizes, values);


}
